@page "/collections/submitaction"

@using AdaptiveCards.Blazor.Samples.Data
@inject WeatherForecastService ForecastService

<h1>Handling Submit Action in Card Collection</h1>

<div class="row">
    <div class="col-8">
        @if (forecasts == null)
        {
            <p><em>Loading...</em></p>
        }

        else
        {
            <Info>This sample demonstrates how Submit action can be handled using OnSubmitAction.</Info>

            <CardCollection OnSubmitAction="@SendEmail" Models="@forecasts" Schema="@Schemas.WeatherTemplated"></CardCollection>

            <Info class="mt-4">This sample demonstrates how Submit action can be handled using SubmitHandler.</Info>

            <CardCollection SubmitHandler="this" Models="@forecasts" Schema="@Schemas.WeatherTemplated"></CardCollection>

            <Info class="mt-4">This sample demonstrates how to rerender the card which submitted the action</Info>
            <CardCollection OnSubmitAction="@SendEmailReRender" Models="@forecasts" Schema="@Schemas.WeatherTemplated"></CardCollection>
        }
    </div>
    <div class="col-4">
        @if (!string.IsNullOrWhiteSpace(actionDetails))
        {
            <Sticky>
                <p class="alert alert-success" style="white-space: pre-wrap">@actionDetails</p>
            </Sticky>
        }
    </div>
</div>

@code {
    WeatherForecast[] forecasts;
    WeatherForecast selectedForecast = null;
    string actionDetails = "";

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }

    public void SendEmail(AdaptiveCards.Blazor.Actions.SubmitEventArgs eventArgs)
    {
        var details = new { eventArgs.Action, eventArgs.Data, eventArgs.Model };
        actionDetails = "SendEmail: " + Environment.NewLine + System.Text.Json.JsonSerializer.Serialize(details, options: new System.Text.Json.JsonSerializerOptions() { WriteIndented = true });
    }

    public Task Submit(WeatherForecast model, string emailAddress, TemplatedAdaptiveCard card)
    {
        var details = new { emailAddress, model };
        actionDetails = "Submit: " + Environment.NewLine + System.Text.Json.JsonSerializer.Serialize(details, options: new System.Text.Json.JsonSerializerOptions() { WriteIndented = true });

        StateHasChanged();

        return Task.CompletedTask;
    }

    public void SendEmailReRender(AdaptiveCards.Blazor.Actions.SubmitEventArgs eventArgs)
    {
        var details = new { eventArgs.Action, eventArgs.Data, eventArgs.Model };
        actionDetails = "SendEmailReRender: " + Environment.NewLine + System.Text.Json.JsonSerializer.Serialize(details, options: new System.Text.Json.JsonSerializerOptions() { WriteIndented = true });

        selectedForecast = (WeatherForecast)eventArgs.Model;
        selectedForecast.Summary = "Shared";

        eventArgs.AdaptiveCard.ShouldReRender = true;
    }
}
