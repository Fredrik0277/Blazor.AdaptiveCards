@page "/samples"

<h1>Official Samples</h1>

<Info>
    Here's a collection of different samples from <a href="https://adaptivecards.io/samples/" target="_blank">https://adaptivecards.io/samples/</a>
</Info>

<div class="row">
    <div class="col-2">
        <table>
            @foreach (var schema in schemas)
            {
                <tr @onclick="@(() => SetSelectedSchema(schema))" style="cursor: pointer;">
                    @if (schemaName == schema.Key)
                    {
                        <td><b>@schema.Key</b></td>
                    }
                    else
                    {
                        <td>@schema.Key</td>
                    }
                </tr>
            }
        </table>

    </div>
    <div class="col-7">
        <textarea readonly style="width:100%; background: #fafafa; border: 0" rows="30">@schema</textarea>
    </div>
    <div class="col-3">
        <AdaptiveCard Schema="@schema" OnSubmitAction="OnSubmit" OnOpenUrlAction="OnOpenLink"></AdaptiveCard>

        <div>
            @if (!string.IsNullOrWhiteSpace(actionDetails))
            {
                <p class="alert alert-success mt-3" style="white-space: pre-wrap">@actionDetails</p>
            }
        </div>
    </div>
</div>

<CodeBlock Source="Samples.razor" />

@code{
    string schema = "";
    string schemaName = "";
    string actionDetails = "";
    Dictionary<string, string> schemas = new Dictionary<string, string>();

    protected override void OnInitialized()
    {
        schemas.Add("Activity update", Schemas.ActivityUpdate);
        schemas.Add("Calendar reminder", Schemas.CalendarReminder);
        schemas.Add("Flight itinerary", Schemas.FlightItinerary);
        schemas.Add("Flight update", Schemas.FlightUpdate);
        schemas.Add("Food order", Schemas.FoodOrder);
        schemas.Add("Image gallery", Schemas.ImageGallery);
        schemas.Add("Input form", Schemas.InputForm);
        schemas.Add("Inputs", Schemas.Inputs);
        schemas.Add("Restaurant", Schemas.Restaurant);
        schemas.Add("Solitaire", Schemas.Solitaire);
        schemas.Add("Sporting event", Schemas.SportingEvent);
        schemas.Add("Stock update", Schemas.StockUpdate);
        schemas.Add("Weather compact", Schemas.WeatherCompact);
        schemas.Add("Weather large", Schemas.WeatherLarge);
        // Product video not yet supported: https://github.com/mikoskinen/Blazor.AdaptiveCards/issues/7
        //schemas.Add("Product video", Schemas.ProductVideo);
        schemas.Add("Agenda", Schemas.Agenda);
        schemas.Add("Expense report", Schemas.ExpenseReport);
        schemas.Add("Flight Details", Schemas.FlightDetails);

        var selectedSchema = schemas.First();

        SetSelectedSchema(selectedSchema);
    }

    private void SetSelectedSchema(KeyValuePair<string, string> selectedSchema)
    {
        schemaName = selectedSchema.Key;
        schema = selectedSchema.Value;

        actionDetails = "";
    }

    private void OnSubmit(AdaptiveCards.Blazor.Actions.SubmitEventArgs eventArgs)
    {
        var details = new { eventArgs.Action, eventArgs.Data };
        actionDetails = "Submit: " + Environment.NewLine + System.Text.Json.JsonSerializer.Serialize(details, options: new System.Text.Json.JsonSerializerOptions() { WriteIndented = true });
    }

    private void OnOpenLink(string url)
    {
        actionDetails = "Open link: " + Environment.NewLine + url;
    }
}